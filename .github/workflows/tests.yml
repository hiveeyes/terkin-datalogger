name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Also, run each Monday At 07:00.
  schedule:
    - cron: '0 7 * * 1'

  # Allow job to be triggered manually.
  workflow_dispatch:

# Cancel in-progress jobs when pushing to the same branch.
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:

  tests:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ] # , macos-latest, windows-latest ]
        python-version: [ "3.7", "3.8", "3.9" ]
        mosquitto-version: [ "2.0" ]
        include:
        - os: ubuntu-latest
          path: ~/.cache/pip
        #- os: macos-latest
        #  path: ~/Library/Caches/pip
        #- os: windows-latest
        #  path: ~\AppData\Local\pip\Cache

    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    name: Python ${{ matrix.python-version }}, Mosquitto ${{ matrix.mosquitto-version }}
    steps:

      - name: Acquire sources
        uses: actions/checkout@v2

      - name: Start Mosquitto
        uses: namoshek/mosquitto-github-action@v1
        with:
          version: ${{ matrix.mosquitto-version }}
          ports: '1883:1883 8883:8883'
          # certificates: ${{ github.workspace }}/.ci/tls-certificates
          config: ${{ github.workspace }}/.github/etc/mosquitto-no-auth.conf
          # container-name: 'mqtt'

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Apply caching of dependencies
        uses: actions/cache@v2
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-${{ hashFiles('setup.py', 'requirements-build.txt', 'requirements-cpython.txt', 'requirements-dev.txt', 'requirements-docs.txt', 'requirements-mpy.txt', 'requirements-release.txt', 'requirements-sbc.txt', 'requirements-terkin-agent.txt', 'requirements-test.txt') }}
          restore-keys: |
           ${{ runner.os }}-pip-

      - name: Install program
        run: |
          make setup
          make setup-cpython

      - name: Run tests
        run: |
          make setup-tests
          make test
